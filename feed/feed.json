
{ "version": "https://jsonfeed.org/version/1.1", "title": "Eleventy Starter Blog", "language": "en", "home_page_url": "https://example.com/11ty-tech-blog/", "feed_url": "https://example.com/11ty-tech-blog/feed/feed.json", "description": "Short demo for ",
"author": { "name": "&lt;Author Name&gt;", "url": "https://example.com/about" }, "items": [ { "id": "https://example.com/11ty-tech-blog/posts/tutorial/opengraph/", "url": "https://example.com/11ty-tech-blog/posts/tutorial/opengraph/", "title": "How to set Opengraph preview image and metadata", "content_html": "<p>When sharing a URL, some sites will generate a preview with a title, description and image using certain <a href=\"https://ogp.me/\">OpenGraph</a> metadata.</p>\n<h3>Set the preview image</h3>\n<p>A default Opengraph preview image for all posts is set in the <code>metadata.json</code>, which looks like:</p>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;title>\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"opengraph\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"image\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;image-url>\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"website\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>To override the preview image for a specific post, set the <code>opengraph.image</code> value in the frontmatter:</p>\n<pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token front-matter-block\"><span class=\"token punctuation\">---</span>\n<span class=\"token front-matter yaml language-yaml\">title: How to set Opengraph preview image and metadata\nopengraph:\n  image: /images/image003.jpg</span>\n<span class=\"token punctuation\">---</span></span></code></pre>\n<h3>Title, description, and tags</h3>\n<p>All three of these are taken from the post's frontmatter's title, description, and tags.</p>\n<pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token front-matter-block\"><span class=\"token punctuation\">---</span>\n<span class=\"token front-matter yaml language-yaml\">title: How to set Opengraph preview image and metadata\ndescription: Instructions on setting up various Opengraph headers\ntags:\n  - opengraph\n  - image\n  - preview\nopengraph:\n  image: /assets/images/image003.jpg</span>\n<span class=\"token punctuation\">---</span></span></code></pre>\n<p>If missing, the defaults are taken from the <code>metadata.json</code> again.</p>\n<h3>Author and type</h3>\n<p>The author and type are always taken from the metadata.json author and type.</p>\n<h2>Testing your OpenGraph Metadata</h2>\n<p>You can go to the <a href=\"https://www.opengraph.xyz/\">opengraph.xyz</a> website, enter your published URL and see if there's any issue.</p>\n", "date_published": "2024-02-17T00:57:11Z" } , { "id": "https://example.com/11ty-tech-blog/posts/tutorial/notice/", "url": "https://example.com/11ty-tech-blog/posts/tutorial/notice/", "title": "Post with notices or alert boxes", "content_html": "<p>This post will show how to create different kinds of notice or alert boxes such as a regular box, as well as info, success, warning, and danger.</p>\n<p>In all cases, use the paired shortcode <code>notice</code> with the notice type (info, success, warning, danger). Leave the notice type out for the regular notice box. You can use markdown inside.</p>\n<div class=\"notice\">\nThis is the default notice. You _can_ use Markdown.\n</div>\n<div class=\"notice info\">\nThis is an info notice. Info means [information](https://en.wikipedia.org/wiki/Information)\n</div>\n<div class=\"notice success\">\nThis is a success notice. Great Success.\n</div>\n<div class=\"notice warning\">\nThis is a warning notice. Don't use `GOTO` statements!\n</div>\n<div class=\"notice danger\">\nThis is a danger notice. **Smoking is fatal**.\n</div>\n<p>For a regular notice box,</p>\n<!-- prettier-ignore-start -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>notice<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>This is the default notice. You _can_ use Markdown.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<!-- prettier-ignore-end -->\n<p>For an info notice box,</p>\n<!-- prettier-ignore-start -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>notice info<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  This is an info notice. Info means\n  [information](https://en.wikipedia.org/wiki/Information)\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<!-- prettier-ignore-end -->\n<p>For a success notice box,</p>\n<!-- prettier-ignore-start -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>notice success<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>This is a success notice. Great Success.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n<!-- prettier-ignore-end -->\n<pre class=\"language-html\"><code class=\"language-html\">\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>notice warning<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  This is a warning notice. Don't use `GOTO` statements!\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n<p>For a danger notice box,</p>\n<pre class=\"language-html\"><code class=\"language-html\">\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>notice danger<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>This is a danger notice. **Smoking is fatal**.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n</code></pre>\n", "date_published": "2024-02-17T00:57:11Z" } , { "id": "https://example.com/11ty-tech-blog/posts/tutorial/syntax/", "url": "https://example.com/11ty-tech-blog/posts/tutorial/syntax/", "title": "Code Blocks Theme", "content_html": "<p>This article shows various Code Blocks allowing to easily compare sublime themes.</p>\n<!-- more -->\n<h2>Code Blocks</h2>\n<p>Code blocks.. ❤️ with automatic syntax highlighting ✨‍</p>\n<p>See <a href=\"https://www.getzola.org/documentation/content/syntax-highlighting/\">the docs</a> for options.</p>\n<h3>Inline Code block</h3>\n<p>If we want, we can also <code>specify inline code</code> which is useful for <code>the small stuff</code>.</p>\n<h3>Code Blocks without tag</h3>\n<pre><code>test 1, test 2, test 3\nanother test 1, another test 2, another test 3\nfinal test 1, final test 2, final test 3\n</code></pre>\n<h3>Markdown</h3>\n<pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token title important\"><span class=\"token punctuation\">#</span> Header 1</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">##</span> Header 2</span>\n\n<span class=\"token code-snippet code keyword\">`backtick`</span>\n\n<span class=\"token code\"><span class=\"token punctuation\">```</span><span class=\"token code-language\">js</span>\n<span class=\"token code-block language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token punctuation\">```</span></span></code></pre>\n<h3>Rust</h3>\n<pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> greetings <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hola\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Bonjour\"</span><span class=\"token punctuation\">,</span>\n                     <span class=\"token string\">\"Ciao\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"こんにちは\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"안녕하세요\"</span><span class=\"token punctuation\">,</span>\n                     <span class=\"token string\">\"Cześć\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Olá\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Здравствуйте\"</span><span class=\"token punctuation\">,</span>\n                     <span class=\"token string\">\"Chào bạn\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"您好\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hallo\"</span><span class=\"token punctuation\">,</span>\n                     <span class=\"token string\">\"Hej\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Ahoj\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"سلام\"</span><span class=\"token punctuation\">,</span>\n                     <span class=\"token string\">\"Hej\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hallo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hei\"</span><span class=\"token punctuation\">,</span>\n                     <span class=\"token string\">\"Helló\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hallo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Buna ziua\"</span><span class=\"token punctuation\">,</span>\n                     <span class=\"token string\">\"Merhaba\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> greeting<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> greetings<span class=\"token punctuation\">.</span><span class=\"token function\">iter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">enumerate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token macro property\">print!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{} : \"</span><span class=\"token punctuation\">,</span> greeting<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">match</span> num <span class=\"token punctuation\">{</span>\n            <span class=\"token number\">0</span> <span class=\"token operator\">=></span>  <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This code is editable and runnable!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//en English</span>\n            <span class=\"token number\">1</span> <span class=\"token operator\">=></span>  <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"¡Este código es editable y ejecutable!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//es Spanish</span>\n            <span class=\"token number\">2</span> <span class=\"token operator\">=></span>  <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ce code est modifiable et exécutable !\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//fr French</span>\n            <span class=\"token number\">3</span> <span class=\"token operator\">=></span>  <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Questo codice è modificabile ed eseguibile!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//it Italian</span>\n            <span class=\"token number\">4</span> <span class=\"token operator\">=></span>  <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"このコードは編集して実行出来ます！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//jp Japanese</span>\n            <span class=\"token number\">5</span> <span class=\"token operator\">=></span>  <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"여기에서 코드를 수정하고 실행할 수 있습니다!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//ko Korean</span>\n            <span class=\"token number\">6</span> <span class=\"token operator\">=></span>  <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ten kod można edytować oraz uruchomić!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//pl Polish</span>\n            <span class=\"token number\">7</span> <span class=\"token operator\">=></span>  <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Este código é editável e executável!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//pt Portuguese</span>\n            <span class=\"token number\">8</span> <span class=\"token operator\">=></span>  <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Этот код можно отредактировать и запустить!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//ru Russian</span>\n            <span class=\"token number\">9</span> <span class=\"token operator\">=></span>  <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bạn có thể edit và run code trực tiếp!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//vi Vietnamese</span>\n            <span class=\"token number\">10</span> <span class=\"token operator\">=></span> <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"这段代码是可以编辑并且能够运行的！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//zh Chinese</span>\n            <span class=\"token number\">11</span> <span class=\"token operator\">=></span> <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Dieser Code kann bearbeitet und ausgeführt werden!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//de German</span>\n            <span class=\"token number\">12</span> <span class=\"token operator\">=></span> <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Den här koden kan redigeras och köras!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//sv Swedish</span>\n            <span class=\"token number\">13</span> <span class=\"token operator\">=></span> <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tento kód můžete upravit a spustit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//cs Czech</span>\n            <span class=\"token number\">14</span> <span class=\"token operator\">=></span> <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"این کد قابلیت ویرایش و اجرا دارد!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//fa Persian</span>\n            <span class=\"token number\">15</span> <span class=\"token operator\">=></span> <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Denne kode kan redigeres og køres!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//da Danish</span>\n            <span class=\"token number\">16</span> <span class=\"token operator\">=></span> <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Deze code is bewerkbaar en uitvoerbaar!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//du Dutch</span>\n            <span class=\"token number\">17</span> <span class=\"token operator\">=></span> <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tämä koodi on muokattavissa ja ajettavissa!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//fi Finnish</span>\n            <span class=\"token number\">18</span> <span class=\"token operator\">=></span> <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ez a kód szerkeszthető és futtatható!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//hu Hungarian</span>\n            <span class=\"token number\">19</span> <span class=\"token operator\">=></span> <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Denne koden er redigerbar og kjørbar!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//no Norwegian</span>\n            <span class=\"token number\">20</span> <span class=\"token operator\">=></span> <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Acest cod este editabil și rulabil!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//ro Romanian</span>\n            <span class=\"token number\">21</span> <span class=\"token operator\">=></span> <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bu kod düzenlenebilir ve çalıştırılabilir!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//tr Turkish</span>\n            _ <span class=\"token operator\">=></span>  <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3>Bash</h3>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">d</span> <span class=\"token keyword\">in</span> /sys/kernel/iommu_groups/*/devices/*<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n  <span class=\"token assign-left variable\">n</span><span class=\"token operator\">=</span><span class=\"token variable\">${d<span class=\"token operator\">#</span>*<span class=\"token operator\">/</span>iommu_groups<span class=\"token operator\">/</span>*}</span><span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">n</span><span class=\"token operator\">=</span><span class=\"token variable\">${n<span class=\"token operator\">%%</span><span class=\"token operator\">/</span>*}</span>\n  <span class=\"token builtin class-name\">printf</span> <span class=\"token string\">'IOMMU Group %s '</span> <span class=\"token string\">\"<span class=\"token variable\">$n</span>\"</span>\n  lspci <span class=\"token parameter variable\">-nns</span> <span class=\"token string\">\"<span class=\"token variable\">${d<span class=\"token operator\">##</span>*<span class=\"token operator\">/</span>}</span>\"</span>\n<span class=\"token keyword\">done</span></code></pre>\n<h3>TOML</h3>\n<pre class=\"language-toml,linenos,hl_lines=3\"><code class=\"language-toml,linenos,hl_lines=3\">base_url = \"https://abridge.netlify.app/\"\ntitle = \"Abridge\"\ndescription = \"Abridge is a fast and lightweight Zola theme using semantic html, abridge.css class-light CSS, and No Mandatory JS.\"\ndefault_language = \"en\"\n#theme = \"abridge\"\n\nbuild_search_index = true\nminify_html = false\nfeed_filename = \"atom.xml\"\ntaxonomies = [\n    {name = \"categories\", feed = true},\n    {name = \"tags\", feed = true},\n]</code></pre>\n<h3>HTML</h3>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Example HTML5 Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!--Main Content Area--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<h3>CSS</h3>\n<pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">html</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--fs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.c</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3>SCSS</h3>\n<pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token property\"><span class=\"token variable\">$font</span></span><span class=\"token punctuation\">:</span> Roboto system-ui -apple-system BlinkMacSystemFont <span class=\"token string\">\"Segoe UI\"</span> Oxygen\n  Ubuntu Cantarell <span class=\"token string\">\"Fira Sans\"</span> <span class=\"token string\">\"Droid Sans\"</span> <span class=\"token string\">\"Helvetica Neue\"</span> <span class=\"token string\">\"Noto Sans\"</span>\n  Helvetica Arial sans-serif <span class=\"token statement keyword\">!default</span><span class=\"token punctuation\">;</span>\n<span class=\"token property\"><span class=\"token variable\">$font-mono</span></span><span class=\"token punctuation\">:</span> ui-monospace Menlo Monaco Consolas <span class=\"token string\">\"SF Mono\"</span> <span class=\"token string\">\"Cascadia Mono\"</span>\n  <span class=\"token string\">\"Segoe UI Mono\"</span> <span class=\"token string\">\"DejaVu Sans Mono\"</span> <span class=\"token string\">\"Liberation Mono\"</span> <span class=\"token string\">\"Roboto Mono\"</span>\n  <span class=\"token string\">\"Oxygen Mono\"</span> <span class=\"token string\">\"Ubuntu Monospace\"</span> <span class=\"token string\">\"Ubuntu Mono\"</span> <span class=\"token string\">\"Source Code Pro\"</span> <span class=\"token string\">\"Fira Mono\"</span>\n  <span class=\"token string\">\"Droid Sans Mono\"</span> <span class=\"token string\">\"Courier New\"</span> Courier monospace <span class=\"token statement keyword\">!default</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">@mixin</span> <span class=\"token selector\">font </span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// convert space separated list to comma separated list</span>\n  <span class=\"token property\"><span class=\"token variable\">$font</span></span><span class=\"token punctuation\">:</span> list.<span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$font</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\"><span class=\"token variable\">$separator</span></span><span class=\"token punctuation\">:</span> comma<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\"><span class=\"token variable\">$font</span></span><span class=\"token punctuation\">:</span> functions.<span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$font</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\"><span class=\"token variable\">$font-mono</span></span><span class=\"token punctuation\">:</span> list.<span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$font-mono</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token property\"><span class=\"token variable\">$separator</span></span><span class=\"token punctuation\">:</span> comma<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\"><span class=\"token variable\">$font-mono</span></span><span class=\"token punctuation\">:</span> functions.<span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$font-mono</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token property\"><span class=\"token variable\">$font</span></span><span class=\"token punctuation\">:</span> functions.<span class=\"token function\">font-var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$font</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$fontExt-Main</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$findFont-Main</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\"><span class=\"token variable\">$font-mono</span></span><span class=\"token punctuation\">:</span> functions.<span class=\"token function\">font-var</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$font-mono</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$fontExt-Code</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$findFont-Code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  #<span class=\"token punctuation\">{</span>--ff<span class=\"token punctuation\">}</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$font</span><span class=\"token punctuation\">;</span>\n  #<span class=\"token punctuation\">{</span>--fm<span class=\"token punctuation\">}</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$font-mono</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//code</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3>Javascript</h3>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">closeSearch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//close the search displaying the regular page.</span>\n  <span class=\"token keyword\">const</span> e <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  e<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>main<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">goSearch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// on enter key or search icon click display results to the page.</span>\n  <span class=\"token keyword\">const</span> e <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"main\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  window<span class=\"token punctuation\">.</span>main <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>main <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> t <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"suggestions\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    n <span class=\"token operator\">=</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ResultsClone <span class=\"token operator\">=</span> t<span class=\"token punctuation\">.</span><span class=\"token function\">cloneNode</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> <span class=\"token string\">\"results\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    o <span class=\"token operator\">=</span>\n      <span class=\"token string\">'&lt;h2>&lt;button type=\"button\" title=\"Close Search\" onclick=\"closeSearch()\">&lt;i class=\"svgs x\">&lt;/i>&lt;/button> &lt;i class=\"svgs search\">&lt;/i> '</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>\n        document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"searchinput\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"&lt;/h2>\"</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    ResultsClone<span class=\"token punctuation\">.</span><span class=\"token function\">insertBefore</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> ResultsClone<span class=\"token punctuation\">.</span>firstChild<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> ResultsClone<span class=\"token punctuation\">.</span>outerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"searchinput\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">!</span><span class=\"token number\">1</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">!</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// search function code goes here</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<h3>PHP</h3>\n<pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">/**\n * Postfix Admin\n */</span>\n<span class=\"token keyword\">require_once</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'common.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$CONF</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">Config</span><span class=\"token operator\">::</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REQUEST_METHOD'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"POST\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'PFA_token'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Invalid token (session timeout; refresh the page and try again?)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token variable\">$fUsername</span> <span class=\"token operator\">=</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token function\">safepost</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'fUsername'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$lang</span> <span class=\"token operator\">!=</span> <span class=\"token function\">check_language</span><span class=\"token punctuation\">(</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\"># only set cookie if language selection was changed</span>\n        <span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'lang'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$lang</span><span class=\"token punctuation\">,</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">60</span><span class=\"token operator\">*</span><span class=\"token number\">24</span><span class=\"token operator\">*</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># language cookie, lifetime 30 days</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'PFA_token'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token function\">uniqid</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"pfa\"</span> <span class=\"token operator\">.</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* vim: set expandtab softtabstop=4 tabstop=4 shiftwidth=4: */</span>\n</span></code></pre>\n<h3>Json</h3>\n<pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Abridge Zola Theme\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"short_name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Abridge\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Fast &amp; Lightweight Zola Theme\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"start_url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/index.html\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"scope\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"background_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#111111\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"theme_color\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#222222\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"display\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"standalone\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"icons\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/android-chrome-192x192.png\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"192x192\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/android-chrome-512x512.png\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"512x512\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/android-chrome-192x192m.png\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"sizes\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"192x192\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"image/png\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"purpose\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"maskable\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3>SQL</h3>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- jelly-actix-web-starter - Creates an accounts table, along with some associated helpers.</span>\n\n<span class=\"token keyword\">create</span> <span class=\"token operator\">or</span> <span class=\"token keyword\">replace</span> <span class=\"token keyword\">function</span> update_timestamp<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token keyword\">trigger</span> <span class=\"token keyword\">as</span> $$\n<span class=\"token keyword\">begin</span>\n    new<span class=\"token punctuation\">.</span>updated <span class=\"token operator\">=</span> <span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> new<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">;</span>\n$$ <span class=\"token keyword\">language</span> <span class=\"token string\">'plpgsql'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">if</span> <span class=\"token operator\">not</span> <span class=\"token keyword\">exists</span> accounts <span class=\"token punctuation\">(</span>\n    id <span class=\"token keyword\">serial</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">,</span>\n    name <span class=\"token keyword\">text</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>\n    email <span class=\"token keyword\">text</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">unique</span><span class=\"token punctuation\">,</span>\n    password <span class=\"token keyword\">text</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>\n    profile jsonb <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">default</span> <span class=\"token string\">'{}'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">plan</span> <span class=\"token keyword\">integer</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">default</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    is_active <span class=\"token keyword\">boolean</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">default</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    is_admin <span class=\"token keyword\">boolean</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">default</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    has_verified_email <span class=\"token keyword\">boolean</span> <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">default</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    last_login <span class=\"token keyword\">timestamp</span> <span class=\"token keyword\">with</span> <span class=\"token keyword\">time</span> zone<span class=\"token punctuation\">,</span>\n    created <span class=\"token keyword\">timestamp</span> <span class=\"token keyword\">with</span> <span class=\"token keyword\">time</span> zone <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">default</span> <span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    updated <span class=\"token keyword\">timestamp</span> <span class=\"token keyword\">with</span> <span class=\"token keyword\">time</span> zone <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span> <span class=\"token keyword\">default</span> <span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">unique</span> <span class=\"token keyword\">index</span> accounts_unique_lower_email_idx <span class=\"token keyword\">on</span> accounts <span class=\"token punctuation\">(</span>lower<span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">trigger</span> user_updated before <span class=\"token keyword\">insert</span> <span class=\"token operator\">or</span> <span class=\"token keyword\">update</span> <span class=\"token keyword\">on</span> accounts\n<span class=\"token keyword\">for each row</span> <span class=\"token keyword\">execute</span> <span class=\"token keyword\">procedure</span> update_timestamp<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h3>Lua</h3>\n<pre class=\"language-lua\"><code class=\"language-lua\"><span class=\"token keyword\">function</span> <span class=\"token function\">square</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> x <span class=\"token operator\">*</span> x\n<span class=\"token keyword\">end</span>\n\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">square</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">-- prints '4'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getPlayerInformation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n   playerName <span class=\"token operator\">=</span> <span class=\"token function\">UnitName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"player\"</span><span class=\"token punctuation\">)</span>\n   playerLevel <span class=\"token operator\">=</span> <span class=\"token function\">UnitLevel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"player\"</span><span class=\"token punctuation\">)</span>\n   specId<span class=\"token punctuation\">,</span> specName <span class=\"token operator\">=</span> <span class=\"token function\">GetSpecializationInfo</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetSpecialization</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n   <span class=\"token keyword\">return</span> <span class=\"token string\">\"Hey, I'm \"</span> <span class=\"token operator\">..</span> playerName <span class=\"token operator\">..</span> <span class=\"token string\">\" (Level \"</span> <span class=\"token operator\">..</span> playerLevel <span class=\"token operator\">..</span> <span class=\"token string\">\"). I'm currently in spec \"</span> <span class=\"token operator\">..</span> specName <span class=\"token operator\">..</span> <span class=\"token string\">\".\"</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">getPlayerInformation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre>\n<h3>C</h3>\n<pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* actual initialization */</span>\n    a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3>C++</h3>\n<pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// Your First C++ Program</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/* actual initialization */</span>\n    a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3>Go</h3>\n<pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> myvariable1 <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n    <span class=\"token keyword\">var</span> myvariable2 <span class=\"token operator\">=</span> <span class=\"token string\">\"hello world\"</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<h3>Python</h3>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">#!/usr/bin/env python3</span>\n<span class=\"token keyword\">import</span> smtplib<span class=\"token punctuation\">,</span> socket\n<span class=\"token keyword\">from</span> influxdb <span class=\"token keyword\">import</span> InfluxDBClient\n\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    send <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    later <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">25200</span>\n    iso <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>ctime<span class=\"token punctuation\">(</span>later<span class=\"token punctuation\">)</span>\n    tempF <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>bme280<span class=\"token punctuation\">.</span>temperature <span class=\"token operator\">*</span> <span class=\"token number\">1.8</span> <span class=\"token operator\">+</span> <span class=\"token number\">29</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#C to F formula is +32, difference is to correct bme280 temperature offset</span>\n    humidity <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>bme280<span class=\"token punctuation\">.</span>humidity<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    pressure <span class=\"token operator\">=</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>bme280<span class=\"token punctuation\">.</span>pressure<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># serialize data as JSON</span>\n    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token string\">\"measurement\"</span><span class=\"token punctuation\">:</span> measurement<span class=\"token punctuation\">,</span>\n              <span class=\"token string\">\"tags\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token string\">\"location\"</span><span class=\"token punctuation\">:</span> location<span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n              <span class=\"token string\">\"time\"</span><span class=\"token punctuation\">:</span> iso<span class=\"token punctuation\">,</span>\n              <span class=\"token string\">\"fields\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                  <span class=\"token string\">\"temperature\"</span> <span class=\"token punctuation\">:</span> tempF<span class=\"token punctuation\">,</span>\n                  <span class=\"token string\">\"humidity\"</span><span class=\"token punctuation\">:</span> humidity<span class=\"token punctuation\">,</span>\n                  <span class=\"token string\">\"pressure\"</span><span class=\"token punctuation\">:</span> pressure\n                               <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># Send the JSON data to InfluxDB</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n      client<span class=\"token punctuation\">.</span>write_points<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> socket<span class=\"token punctuation\">.</span>error <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Could Not Connect to InfluxDB!\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> tempF <span class=\"token operator\">></span> <span class=\"token number\">90</span> <span class=\"token keyword\">and</span> humidity <span class=\"token operator\">></span> <span class=\"token number\">55</span><span class=\"token punctuation\">:</span>\n      emailSubject <span class=\"token operator\">=</span> <span class=\"token string\">\"Humidity>55:  \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>humidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"%H  , Temperature>90:  \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>tempF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"F\"</span>\n      emailContent <span class=\"token operator\">=</span> <span class=\"token string\">'Humidity:  '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>humidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'%H  , Temperature:  '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>tempF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'F  &lt;a href=\"https://metrics.example.com\">Dashboard&lt;/a>'</span>\n    <span class=\"token keyword\">elif</span> humidity <span class=\"token operator\">></span> <span class=\"token number\">55</span><span class=\"token punctuation\">:</span>\n      emailSubject <span class=\"token operator\">=</span> <span class=\"token string\">\"Humidity>55:  \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>humidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"%H\"</span>\n      emailContent <span class=\"token operator\">=</span> <span class=\"token string\">'Humidity:  '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>humidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'%H  , Temperature:  '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>tempF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'F  &lt;a href=\"https://metrics.example.com\">Dashboard&lt;/a>'</span>\n    <span class=\"token keyword\">elif</span> tempF <span class=\"token operator\">></span> <span class=\"token number\">90</span><span class=\"token punctuation\">:</span>\n      emailSubject <span class=\"token operator\">=</span> <span class=\"token string\">\"Temperature>90:  \"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>tempF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"F\"</span>\n      emailContent <span class=\"token operator\">=</span> <span class=\"token string\">'Humidity:  '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>humidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'%H  , Temperature:  '</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>tempF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'F  &lt;a href=\"https://metrics.example.com\">Dashboard&lt;/a>'</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n      send <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">if</span> send <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> lastEmailTime <span class=\"token keyword\">or</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>lastTemp<span class=\"token operator\">-</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>tempF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n          lastEmailTime <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>emailInterval\n          lastTemp <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>tempF<span class=\"token punctuation\">)</span>\n          sender<span class=\"token punctuation\">.</span>sendmail<span class=\"token punctuation\">(</span><span class=\"token string\">'jake@example.com'</span><span class=\"token punctuation\">,</span> emailSubject<span class=\"token punctuation\">,</span> emailContent<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">except</span> socket<span class=\"token punctuation\">.</span>error <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Could Not Connect to SMTP server!\"</span><span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span>interval<span class=\"token punctuation\">)</span></code></pre>\n<h3>Ruby</h3>\n<pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\">=begin\n  Ruby program to check whether the\n  year is leap year or not between range.\n=end</span>\n\nputs <span class=\"token string-literal\"><span class=\"token string\">\"Enter the lower limit:\"</span></span>\nlwr <span class=\"token operator\">=</span> gets<span class=\"token punctuation\">.</span>chomp<span class=\"token punctuation\">.</span>to_i\nputs <span class=\"token string-literal\"><span class=\"token string\">\"Enter the upper limit:\"</span></span>\nupr <span class=\"token operator\">=</span> gets<span class=\"token punctuation\">.</span>chomp<span class=\"token punctuation\">.</span>to_i\n\n<span class=\"token keyword\">for</span> yr <span class=\"token keyword\">in</span> lwr<span class=\"token operator\">..</span>upr <span class=\"token keyword\">do</span>\n  <span class=\"token keyword\">if</span> yr <span class=\"token operator\">%</span> <span class=\"token number\">400</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span>\n    puts <span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation\"><span class=\"token delimiter punctuation\">#{</span><span class=\"token content\">yr</span><span class=\"token delimiter punctuation\">}</span></span><span class=\"token string\"> is a leap year\"</span></span>\n  <span class=\"token keyword\">elsif</span> yr <span class=\"token operator\">%</span> <span class=\"token number\">4</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> yr <span class=\"token operator\">%</span> <span class=\"token number\">100</span> <span class=\"token operator\">!=</span><span class=\"token number\">0</span>\n    puts <span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation\"><span class=\"token delimiter punctuation\">#{</span><span class=\"token content\">yr</span><span class=\"token delimiter punctuation\">}</span></span><span class=\"token string\"> is a leap year\"</span></span>\n  <span class=\"token keyword\">else</span>\n    puts <span class=\"token string-literal\"><span class=\"token string\">\"</span><span class=\"token interpolation\"><span class=\"token delimiter punctuation\">#{</span><span class=\"token content\">yr</span><span class=\"token delimiter punctuation\">}</span></span><span class=\"token string\"> is not a leap year\"</span></span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre>\n", "date_published": "2024-01-01T00:00:00Z" } , { "id": "https://example.com/11ty-tech-blog/posts/tutorial/code/", "url": "https://example.com/11ty-tech-blog/posts/tutorial/code/", "title": "Post with some code blocks", "content_html": "<p>A post with some code samples. These are using the Prism CSS library.</p>\n<h3>Basic code blocks using backticks</h3>\n<p>Surround code with 3 backticks to produce a code block.</p>\n<p>For instance,</p>\n<pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token code\"><span class=\"token punctuation\">```</span>\n<span class=\"token code-block\">console.log('hello');</span>\n<span class=\"token punctuation\">```</span></span></code></pre>\n<p>Produces:</p>\n<pre><code>console.log('hello');\n</code></pre>\n<h3>Code blocks with syntax highlighting</h3>\n<p>To get colorful syntax highlighting, follow the 3 backtickes with a <a href=\"https://prismjs.com/#languages-list\">language name</a>.</p>\n<p>For example <code> ```javascript</code>, then add the code, and close the block with <code>```</code></p>\n<p>Here is some Javascript</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//If there's a JWT header, parse it and decode and put it in the response</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">JWT_HEADER</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> token <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">[</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">JWT_HEADER</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    echo<span class=\"token punctuation\">.</span>jwt <span class=\"token operator\">=</span> token<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    token <span class=\"token operator\">=</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> decoded <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">complete</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    echo<span class=\"token punctuation\">.</span>jwt <span class=\"token operator\">=</span> decoded<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Similarly for C#, use <code> ```csharp</code></p>\n<pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">FindBucketLocationAsync</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IAmazonS3</span> client<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> bucketLocation<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">GetBucketLocationRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        BucketName <span class=\"token operator\">=</span> bucketName\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">GetBucketLocationResponse</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">GetBucketLocationAsync</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bucketLocation <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>Location<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> bucketLocation<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Have some <code> ```bash</code></p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/usr/bin/env bash</span>\n\n<span class=\"token builtin class-name\">set</span> <span class=\"token parameter variable\">-euo</span> pipefail\n\n<span class=\"token keyword\">function</span> <span class=\"token function-name function\">message</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"---------------------------------------------------------------\"</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$1</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"---------------------------------------------------------------\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-x</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">command</span> <span class=\"token parameter variable\">-v</span> jq<span class=\"token variable\">)</span></span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    message <span class=\"token string\">\"JQ not installed. Installing...\"</span>\n    <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> jq\n<span class=\"token keyword\">fi</span></code></pre>\n<pre><code>\n</code></pre>\n", "date_published": "2023-01-05T00:00:00Z" } , { "id": "https://example.com/11ty-tech-blog/posts/tutorial/2022-08-15-post-date/", "url": "https://example.com/11ty-tech-blog/posts/tutorial/2022-08-15-post-date/", "title": "How to set the date of a post", "content_html": "<p>When writing a new post, you can set the date of the post in a few different ways. The date of the post determines the order it appears in the post listings.</p>\n<h3>In the filename</h3>\n<p>The date can be set in the post's filename. For example, <code>./content/posts/tutorial/2022-08-15-post-date.md</code> will be published to the URL <code>/posts/tutorial/2022-08-15-post-date/</code> and the date appears as <code>August 15, 2022</code>. This is the best way to write posts, since having the date at the beginning helps organize the posts in order.</p>\n<h3>In the frontmatter</h3>\n<p>The date can also be set in the page's frontmatter.</p>\n<pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token front-matter-block\"><span class=\"token punctuation\">---</span>\n<span class=\"token front-matter yaml language-yaml\">title: How to set the date of a post\ndate: 2024-02-02</span>\n<span class=\"token punctuation\">---</span></span></code></pre>\n<h3>Both the file name <em>and</em> the frontmatter</h3>\n<p>If the date is set both in the file name as well as the frontmatter, the frontmatter date takes precedence.</p>\n<h3>Setting a last modified date for a post</h3>\n<p>Setting the <code>updated</code> in the frontmatter modifies the display and metadata date, but without changing its order in the listing.</p>\n<pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token front-matter-block\"><span class=\"token punctuation\">---</span>\n<span class=\"token front-matter yaml language-yaml\">title: How to set the date of a post\nupdated: 2022-08-20</span>\n<span class=\"token punctuation\">---</span></span></code></pre>\n<p>This is <strong>not</strong> the standard for 11ty and created just for this template.</p>\n<h3>Posts without a date</h3>\n<p>If there's no date in the file name, or the frontmatter, then the date defaults to the time of build, so it gets updated each time the site is built.\nIf you don't have a build process and serve it locally, it uses the filesystem to determine when the file was last updated/created.</p>\n<h2>Recommendations</h2>\n<p>My recommendation is putting the date in the filename like <code>./content/posts/tutorial/2022-08-15-post-date.md</code>, or use a sub-folder, like <code>2022-08-15/post-date.md</code>.\nIt will be easier for you to figure out, using any filesystem, to sort your posts, instead of having a &quot;mess&quot; (i.e unordered list) of articles.</p>\n<hr>\n<p>Anyway, the date appears at the top of the post ☝️</p>\n<h4>Links</h4>\n<ul>\n<li><a href=\"https://www.11ty.dev/docs/dates/\">11ty Date Documentation</a></li>\n</ul>\n", "date_published": "2022-08-15T00:00:00Z" } , { "id": "https://example.com/11ty-tech-blog/posts/2024/markdown-syntax-2/", "url": "https://example.com/11ty-tech-blog/posts/2024/markdown-syntax-2/", "title": "Markdown Syntax Guide Part 2", "content_html": "<p>This article offers a sample of basic Markdown syntax that can be used in Eleventy content files, also it shows whether basic HTML elements are decorated with CSS in a Eleventy theme.</p>\n<!--more-->\n<h2>Headings</h2>\n<p>The following HTML <code>&lt;h1&gt;</code>—<code>&lt;h6&gt;</code> elements represent six levels of section headings. <code>&lt;h1&gt;</code> is the highest section level while <code>&lt;h6&gt;</code> is the lowest.</p>\n<h1>H1</h1>\n<h2>H2</h2>\n<h3>H3</h3>\n<h4>H4</h4>\n<h5>H5</h5>\n<h6>H6</h6>\n<h2>Paragraph</h2>\n<p>Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.</p>\n<p>Itatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.</p>\n<h2>Image</h2>\n<p><img src=\"https://picsum.photos/480/320\" alt=\"placeholder image\"></p>\n<h2>Blockquotes</h2>\n<p>The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a <code>footer</code> or <code>cite</code> element, and optionally with in-line changes such as annotations and abbreviations.</p>\n<h4>Blockquote without attribution</h4>\n<blockquote>\n<p>Tiam, ad mint andaepu dandae nostion secatur sequo quae.\n<strong>Note</strong> that you can use <em>Markdown syntax</em> within a blockquote.</p>\n</blockquote>\n<h4>Blockquote with attribution</h4>\n<blockquote>\n<p>Don't communicate by sharing memory, share memory by communicating.<br>\n— <cite>Rob Pike[^1]</cite></p>\n</blockquote>\n<p>[^1]: The above quote is excerpted from Rob Pike's <a href=\"https://www.youtube.com/watch?v=PAAkCSZUG1c\">talk</a> during Gopherfest, November 18, 2015.</p>\n<h2>Code Blocks</h2>\n<h4>Code block with backticks</h4>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Example HTML5 Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<h4>Code block indented with four spaces</h4>\n<p>&lt;!doctype html&gt;\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Example HTML5 Document</title>\n</head>\n<body>\n<p>Test</p>\n</body>\n</html></p>\n<h2>List Types</h2>\n<h4>Ordered List</h4>\n<ol>\n<li>First item</li>\n<li>Second item</li>\n<li>Third item</li>\n</ol>\n<h4>Unordered List</h4>\n<ul>\n<li>List item</li>\n<li>Another item</li>\n<li>And another item</li>\n</ul>\n<h4>Nested list</h4>\n<ul>\n<li>Fruit\n<ul>\n<li>Apple</li>\n<li>Orange</li>\n<li>Banana</li>\n</ul>\n</li>\n<li>Dairy\n<ul>\n<li>Milk</li>\n<li>Cheese</li>\n</ul>\n</li>\n</ul>\n<h2>Other Elements — abbr, sub, sup, kbd, mark</h2>\n<p><abbr title=\"Graphics Interchange Format\">GIF</abbr> is a bitmap image format.</p>\n<p>H<sub>2</sub>O</p>\n<p>X<sup>n</sup> + Y<sup>n</sup> = Z<sup>n</sup></p>\n<p>Press <kbd><kbd>CTRL</kbd>+<kbd>ALT</kbd>+<kbd>Delete</kbd></kbd> to end the session.</p>\n<p>Most <mark>salamanders</mark> are nocturnal, and hunt for insects, worms, and other small creatures.</p>\n", "date_published": "2021-03-24T00:00:00Z" } , { "id": "https://example.com/11ty-tech-blog/posts/2024/markdown-syntax/", "url": "https://example.com/11ty-tech-blog/posts/2024/markdown-syntax/", "title": "Markdown Syntax Guide", "content_html": "<p>This article offers a sample of basic Markdown syntax that can be used in Eleventy content files, also it shows whether basic HTML elements are decorated with CSS in a Eleventy theme.</p>\n<!--more-->\n<h2>Headings</h2>\n<p>The following HTML <code>&lt;h1&gt;</code>—<code>&lt;h6&gt;</code> elements represent six levels of section headings. <code>&lt;h1&gt;</code> is the highest section level while <code>&lt;h6&gt;</code> is the lowest.</p>\n<h1>H1</h1>\n<h2>H2</h2>\n<h3>H3</h3>\n<h4>H4</h4>\n<h5>H5</h5>\n<h6>H6</h6>\n<h2>Paragraph</h2>\n<p>Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.</p>\n<p>Itatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.</p>\n<h2>Blockquotes</h2>\n<p>The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a <code>footer</code> or <code>cite</code> element, and optionally with in-line changes such as annotations and abbreviations.</p>\n<h4>Blockquote without attribution</h4>\n<blockquote>\n<p>Tiam, ad mint andaepu dandae nostion secatur sequo quae.\n<strong>Note</strong> that you can use <em>Markdown syntax</em> within a blockquote.</p>\n</blockquote>\n<h4>Blockquote with attribution</h4>\n<blockquote>\n<p>Don't communicate by sharing memory, share memory by communicating.<br>\n— <cite>Rob Pike[^1]</cite></p>\n</blockquote>\n<p>[^1]: The above quote is excerpted from Rob Pike's <a href=\"https://www.youtube.com/watch?v=PAAkCSZUG1c\">talk</a> during Gopherfest, November 18, 2015.</p>\n<h2>Code Blocks</h2>\n<h4>Code block with backticks</h4>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Example HTML5 Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<h4>Code block indented with four spaces</h4>\n<p>&lt;!doctype html&gt;\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Example HTML5 Document</title>\n</head>\n<body>\n<p>Test</p>\n</body>\n</html></p>\n<h2>List Types</h2>\n<h4>Ordered List</h4>\n<ol>\n<li>First item</li>\n<li>Second item</li>\n<li>Third item</li>\n</ol>\n<h4>Unordered List</h4>\n<ul>\n<li>List item</li>\n<li>Another item</li>\n<li>And another item</li>\n</ul>\n<h4>Nested list</h4>\n<ul>\n<li>Fruit\n<ul>\n<li>Apple</li>\n<li>Orange</li>\n<li>Banana</li>\n</ul>\n</li>\n<li>Dairy\n<ul>\n<li>Milk</li>\n<li>Cheese</li>\n</ul>\n</li>\n</ul>\n<h2>Other Elements — abbr, sub, sup, kbd, mark</h2>\n<p><abbr title=\"Graphics Interchange Format\">GIF</abbr> is a bitmap image format.</p>\n<p>H<sub>2</sub>O</p>\n<p>X<sup>n</sup> + Y<sup>n</sup> = Z<sup>n</sup></p>\n<p>Press <kbd><kbd>CTRL</kbd>+<kbd>ALT</kbd>+<kbd>Delete</kbd></kbd> to end the session.</p>\n<p>Most <mark>salamanders</mark> are nocturnal, and hunt for insects, worms, and other small creatures.</p>\n", "date_published": "2021-03-16T00:00:00Z" } , { "id": "https://example.com/11ty-tech-blog/posts/2024/lorem-ipsum/", "url": "https://example.com/11ty-tech-blog/posts/2024/lorem-ipsum/", "title": "Customary Lorem Ipsum post", "content_html": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Tempor orci eu lobortis elementum nibh tellus molestie nunc non. Amet facilisis magna etiam tempor orci eu lobortis elementum nibh. Pharetra sit amet aliquam id. Volutpat odio facilisis mauris sit amet massa vitae tortor condimentum. Semper viverra nam libero justo laoreet. Mattis rhoncus urna neque viverra justo nec ultrices dui. Mauris augue neque gravida in fermentum et sollicitudin. Nunc mattis enim ut tellus elementum sagittis vitae. Nibh sed pulvinar proin gravida hendrerit lectus. Diam quam nulla porttitor massa. Ac felis donec et odio pellentesque diam volutpat. Cursus eget nunc scelerisque viverra mauris in. Non curabitur gravida arcu ac tortor dignissim convallis. Adipiscing at in tellus integer feugiat.</p>\n<h2>Consectetur libero id</h2>\n<p>Faucibus nisl tincidunt eget nullam non nisi. Tristique nulla aliquet enim tortor at auctor urna. Nisi scelerisque eu ultrices vitae auctor eu augue ut. Cras ornare arcu dui vivamus arcu felis bibendum ut. Eget nulla facilisi etiam dignissim diam quis enim. Consectetur purus ut faucibus pulvinar elementum. Ultricies tristique nulla aliquet enim tortor at auctor urna nunc. Ullamcorper velit sed ullamcorper morbi tincidunt ornare. Id semper risus in hendrerit gravida rutrum. Dignissim convallis aenean et tortor at.</p>\n<p><img src=\"https://live.staticflickr.com/397/31445325431_981b759c23_h.jpg\" alt=\"lorem photum\"></p>\n<p>Laoreet non curabitur gravida arcu. Neque sodales ut etiam sit amet. Vitae purus faucibus ornare suspendisse sed nisi lacus sed viverra. Ornare arcu dui vivamus arcu. Et leo duis ut diam quam nulla porttitor massa id. Diam sit amet nisl suscipit adipiscing bibendum est. Porttitor massa id neque aliquam vestibulum morbi blandit. Tellus integer feugiat scelerisque varius morbi enim nunc faucibus. Dui ut ornare lectus sit amet est placerat in egestas. Vel elit scelerisque mauris pellentesque pulvinar.</p>\n<aside>Odio tempor orci dapibus ultrices in iaculis nunc sed augue. Aenean pharetra magna ac placerat vestibulum lectus mauris.</aside>\n<p>Sit amet justo donec enim diam vulputate ut pharetra sit. Mi proin sed libero enim sed faucibus. Tortor at auctor urna nunc id cursus metus. In pellentesque massa placerat duis ultricies. Semper feugiat nibh sed pulvinar.</p>\n<p>Amet purus gravida quis blandit turpis cursus in hac. Natoque penatibus et magnis dis parturient montes nascetur. Tortor dignissim convallis aenean et tortor at. Eget est lorem ipsum dolor. Lectus nulla at volutpat diam ut venenatis tellus. Ultrices neque ornare aenean euismod elementum nisi quis eleifend. At tellus at urna condimentum mattis pellentesque id. Egestas egestas fringilla phasellus faucibus scelerisque eleifend. Etiam tempor orci eu lobortis elementum nibh tellus. Integer enim neque volutpat ac.</p>\n<h3>Non blandit massa enim nec</h3>\n<p>Leo urna molestie at elementum eu facilisis. Vestibulum sed arcu non odio. Tortor aliquam nulla facilisi cras fermentum odio. Ante in nibh mauris cursus mattis molestie. Lacus sed viverra tellus in. Tortor pretium viverra suspendisse potenti nullam ac tortor vitae purus. Non consectetur a erat nam at lectus urna duis convallis. Tortor dignissim convallis aenean et tortor at risus viverra adipiscing. Tincidunt id aliquet risus feugiat in ante. Aliquam vestibulum morbi blandit cursus risus at ultrices mi tempus. Nec ultrices dui sapien eget. Ullamcorper a lacus vestibulum sed arcu. Et odio pellentesque diam volutpat commodo sed egestas. Orci phasellus egestas tellus rutrum tellus pellentesque eu tincidunt. Ipsum a arcu cursus vitae. Adipiscing elit duis tristique sollicitudin nibh sit. Quis ipsum suspendisse ultrices gravida dictum fusce ut placerat orci. Felis donec et odio pellentesque diam volutpat commodo. Eget nulla facilisi etiam dignissim diam quis.</p>\n<blockquote>\n<p>Mauris a diam maecenas sed enim ut sem viverra. Suspendisse faucibus interdum posuere lorem ipsum dolor sit amet. Cursus eget nunc scelerisque viverra. Id velit ut tortor pretium viverra suspendisse. Ultrices eros in cursus turpis. Quis hendrerit dolor magna eget est lorem ipsum dolor. Diam in arcu cursus euismod quis. Vitae suscipit tellus mauris a diam maecenas sed. Purus non enim praesent elementum facilisis leo vel. Porttitor massa id neque aliquam. Lectus urna duis convallis convallis tellus. Nunc consequat interdum varius sit amet mattis vulputate enim.</p>\n</blockquote>\n<p>Orci nulla pellentesque dignissim enim sit. Tincidunt vitae semper quis lectus nulla at volutpat. Molestie at elementum eu facilisis. In aliquam sem fringilla ut morbi tincidunt augue interdum. Dui nunc mattis enim ut tellus elementum. Ultricies lacus sed turpis tincidunt id aliquet risus feugiat in. Enim diam vulputate ut pharetra sit amet aliquam id. Volutpat est velit egestas dui id ornare. Eu mi bibendum neque egestas congue. Cras sed felis eget velit. Integer quis auctor elit sed vulputate mi sit amet mauris. Gravida rutrum quisque non tellus orci. Rutrum quisque non tellus orci ac auctor.</p>\n<h3>Tincidunt arcu non sodales</h3>\n<p>Neque sodales ut etiam sit. Nibh venenatis cras sed felis eget velit aliquet sagittis id. Aliquet enim tortor at auctor urna nunc id. Turpis massa tincidunt dui ut ornare lectus sit amet. Id faucibus nisl tincidunt eget nullam non. Vitae ultricies leo integer malesuada nunc. Volutpat est velit egestas dui id ornare arcu odio ut. Cursus turpis massa tincidunt dui ut ornare. Neque aliquam vestibulum morbi blandit cursus risus at. Aenean vel elit scelerisque mauris. Quisque sagittis purus sit amet volutpat consequat mauris nunc congue. Nibh tortor id aliquet lectus proin. Sagittis nisl rhoncus mattis rhoncus urna neque.</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">loremFunction</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">boolean</span> ipsum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token constant\">LOG</span><span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Lorem ipsum begins\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Intent</span> sendIntent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sendIntent<span class=\"token punctuation\">.</span><span class=\"token function\">putExtra</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lorem ipsum dolor\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sit amet\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Metus vulputate eu scelerisque felis imperdiet proin fermentum leo. Vulputate enim nulla aliquet porttitor lacus luctus accumsan tortor posuere. Vel pharetra vel turpis nunc eget lorem dolor. Ut tellus elementum sagittis vitae et. Donec ultrices tincidunt arcu non sodales neque sodales. Dis parturient montes nascetur ridiculus <kbd>mus</kbd> mauris vitae. Pulvinar etiam non quam lacus suspendisse. Senectus et netus et malesuada. Sed viverra tellus in hac habitasse. Est sit amet facilisis magna etiam tempor orci eu lobortis.</p>\n<section>Ac turpis egestas integer eget. Euismod elementum nisi quis eleifend. Risus quis varius quam quisque id diam. Adipiscing elit ut aliquam purus sit amet. Tristique senectus et netus et malesuada fames ac. Fames ac turpis egestas sed tempus urna et pharetra. Vel pharetra vel turpis nunc eget lorem dolor. Augue eget arcu dictum varius duis at. Nibh tortor id aliquet lectus proin nibh.</section>\n<h2>Bibendum ut tristique</h2>\n<p>Et egestas quis ipsum suspendisse ultrices gravida. <mark>Est placerat in egestas</mark> erat imperdiet. Imperdiet dui accumsan sit amet nulla facilisi. Quis ipsum suspendisse ultrices gravida dictum fusce ut placerat orci. Aliquet risus feugiat in ante metus dictum at tempor. Vel pharetra vel turpis nunc eget lorem. Suscipit tellus mauris a diam maecenas. Volutpat commodo sed egestas egestas fringilla phasellus faucibus. Justo eget magna fermentum iaculis. Sed euismod nisi porta lorem mollis aliquam ut porttitor leo. Gravida rutrum quisque non tellus orci. Cursus metus aliquam eleifend mi in. Vulputate mi sit amet mauris commodo.</p>\n<p>Arcu odio ut sem nulla pharetra diam sit amet. Ipsum faucibus vitae aliquet nec ullamcorper sit. At imperdiet dui accumsan sit amet nulla facilisi. In nibh mauris cursus mattis molestie a iaculis at erat. Suspendisse in est ante in nibh. Fringilla phasellus faucibus scelerisque eleifend donec pretium vulputate sapien nec. Elit duis tristique sollicitudin nibh. Sagittis nisl rhoncus mattis rhoncus urna neque. Sit amet volutpat consequat mauris nunc. Eget nullam non nisi est sit amet. Et leo duis ut diam quam. Tincidunt arcu non sodales neque sodales ut. Auctor elit sed vulputate mi sit amet. Viverra suspendisse potenti nullam ac tortor vitae purus faucibus. Cras adipiscing enim eu turpis. Placerat in egestas erat imperdiet. Egestas tellus rutrum tellus pellentesque eu tincidunt tortor.</p>\n<div class=\"video\">\n<iframe src=\"https://www.youtube.com/embed/fop5YIk5iek?controls=0\" title=\"YouTube video player\" width=\"100%\" height=\"100%\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\"></iframe>\n</div>\n", "date_published": "2018-05-01T00:00:00Z" }  ] }
