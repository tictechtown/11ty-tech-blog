
{ "version": "https://jsonfeed.org/version/1.1", "title": "Eleventy Starter Blog", "language": "en", "home_page_url": "https://example.com/", "feed_url": "https://example.com/feed/feed.json", "description": "Short demo for ",
"author": { "name": "&lt;Author Name&gt;", "url": "https://example.com/about" }, "items": [ { "id": "https://example.com/posts/tutorial/post-date/", "url": "https://example.com/posts/tutorial/post-date/", "title": "How to set the date of a post", "content_html": "<p>When writing a new post, you can set the date of the post in a few different ways. The date of the post determines the order it appears in the post listings.</p>\n<h3>In the filename</h3>\n<p>The date can be set in the post's filename. For example, <code>./content/posts/tutorial/post-date.md</code> will be published to the URL <code>/posts/tutorial/post-date/</code> and the date appears as <code>February 16, 2024</code>. This is the best way to write posts, since having the date at the beginning helps organize the posts in order.</p>\n<h3>In the frontmatter</h3>\n<p>The date can also be set in the page's frontmatter.</p>\n<pre><code>---\ntitle: How to set the date of a post\ndate: 2022-02-02\n---\n</code></pre>\n<h3>Both the file name <em>and</em> the frontmatter</h3>\n<p>If the date is set both in the file name as well as the frontmatter, the frontmatter date takes precedence.</p>\n<h3>Setting a last modified date for a post</h3>\n<p>Setting the <code>last_modified_at</code> in the frontmatter modifies the display and metadata date, but without changing its order in the listing.</p>\n<pre><code>---\ntitle: How to set the date of a post\nlast_modified_at: 2022-08-17\n---\n</code></pre>\n<h3>Posts without a date</h3>\n<p>If there's no date in the file name, or the frontmatter, then the date defaults to the time of build, so it gets updated each time the site is built.</p>\n<hr>\n<p>Anyway, the date appears at the bottom.</p>\n<p>ðŸ‘‡</p>\n", "date_published": "2024-02-16T00:33:25Z" } , { "id": "https://example.com/posts/tutorial/opengraph/", "url": "https://example.com/posts/tutorial/opengraph/", "title": "How to set Opengraph preview image and metadata", "content_html": "<p>When sharing a URL, some sites will generate a preview with a title, description and image using certain <a href=\"https://ogp.me/\">OpenGraph</a> metadata.</p>\n<h3>Set the preview image</h3>\n<p>A default Opengraph preview image for all posts is set in the <a href=\"https://example.com/posts/tutorial/opengraph/2022-01-01-edit-the-metadata.md\">metadata.json</a>, which looks like:</p>\n<pre><code>\n&lt;!-- {% figure metadata.opengraph.image, &quot;Default opengraph image&quot;, &quot;third&quot; %} --&gt;\n</code></pre>\n<p>To override the preview image for a specific post, set the <code>opengraph.image</code> value in the frontmatter:</p>\n<pre><code>---\ntitle: How to set Opengraph preview image and metadata\nopengraph:\n  image: /assets/images/image003.jpg\n---\n</code></pre>\n<h3>Title, description, and tags</h3>\n<p>All three of these are taken from the post's frontmatter's title, description, and tags.</p>\n<pre><code>---\ntitle: How to set Opengraph preview image and metadata\ndescription: Instructions on setting up various Opengraph headers\ntags:\n  - opengraph\n  - image\n  - preview\nopengraph:\n  image: /assets/images/image003.jpg\n---\n</code></pre>\n<p>If missing, the defaults are taken from the <a href=\"https://example.com/posts/tutorial/opengraph/2022-01-01-edit-the-metadata.md\">metadata.json</a> again.</p>\n<h3>Author and type</h3>\n<p>The author and type are always taken from the metadata.json author and type.</p>\n", "date_published": "2024-02-16T00:33:25Z" } , { "id": "https://example.com/posts/tutorial/notice/", "url": "https://example.com/posts/tutorial/notice/", "title": "Post with notices or alert boxes", "content_html": "<p>This post will show how to create different kinds of notice or alert boxes such as a regular box, as well as info, success, warning, and danger.</p>\n<p>In all cases, use the paired shortcode <code>notice</code> with the notice type (info, success, warning, danger). Leave the notice type out for the regular notice box. You can use markdown inside.</p>\n<div class=\"notice\">\nThis is the default notice. You _can_ use Markdown.\n</div>\n<div class=\"notice info\">\nThis is an info notice. Info means [information](https://en.wikipedia.org/wiki/Information)\n</div>\n<div class=\"notice success\">\nThis is a success notice. Great Success.\n</div>\n<div class=\"notice warning\">\nThis is a warning notice. Don't use `GOTO` statements!\n</div>\n<div class=\"notice danger\">\nThis is a danger notice. **Smoking is fatal**.\n</div>\n<p>For a regular notice box,</p>\n<pre><code>&lt;div class=&quot;notice&quot;&gt;\nThis is the default notice. You _can_ use Markdown.\n&lt;/div&gt;\n</code></pre>\n<p>For an info notice box,</p>\n<pre><code>&lt;div class=&quot;notice info&quot;&gt;\nThis is an info notice. Info means [information](https://en.wikipedia.org/wiki/Information)\n&lt;/div&gt;\n</code></pre>\n<p>For a success notice box,</p>\n<pre><code>&lt;div class=&quot;notice success&quot;&gt;\nThis is a success notice. Great Success.\n&lt;/div&gt;\n</code></pre>\n<p>For a warning notice box,</p>\n<pre><code>&lt;div class=&quot;notice warning&quot;&gt;\nThis is a warning notice.  Don't use `GOTO` statements!\n&lt;/div&gt;\n</code></pre>\n<p>For a danger notice box,</p>\n<pre><code>&lt;div class=&quot;notice danger&quot;&gt;\nThis is a danger notice. **Smoking is fatal**.\n&lt;/div&gt;\n</code></pre>\n", "date_published": "2024-02-16T00:33:25Z" } , { "id": "https://example.com/posts/tutorial/code/", "url": "https://example.com/posts/tutorial/code/", "title": "Post with some code blocks", "content_html": "<p>A post with some code samples. These are using the Prism CSS library.</p>\n<h3>Basic code blocks using backticks</h3>\n<p>Surround code with 3 backticks to produce a code block.</p>\n<p>For instance,</p>\n<pre><code>```\nconsole.log('hello');\n```\n</code></pre>\n<p>Produces:</p>\n<pre><code>console.log('hello');\n</code></pre>\n<h3>Code blocks with syntax highlighting</h3>\n<p>To get colorful syntax highlighting, follow the 3 backtickes with a <a href=\"https://prismjs.com/#languages-list\">language name</a>.</p>\n<p>For example <code> ```javascript</code>, then add the code, and close the block with <code>```</code></p>\n<p>Here is some Javascript</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//If there's a JWT header, parse it and decode and put it in the response</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">JWT_HEADER</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> token <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">[</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">JWT_HEADER</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    echo<span class=\"token punctuation\">.</span>jwt <span class=\"token operator\">=</span> token<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    token <span class=\"token operator\">=</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> decoded <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">complete</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    echo<span class=\"token punctuation\">.</span>jwt <span class=\"token operator\">=</span> decoded<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Similarly for C#, use <code> ```csharp</code></p>\n<pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">FindBucketLocationAsync</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IAmazonS3</span> client<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> bucketLocation<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">GetBucketLocationRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        BucketName <span class=\"token operator\">=</span> bucketName\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">GetBucketLocationResponse</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">GetBucketLocationAsync</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bucketLocation <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>Location<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> bucketLocation<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Have some <code> ```bash</code></p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/usr/bin/env bash</span>\n\n<span class=\"token builtin class-name\">set</span> <span class=\"token parameter variable\">-euo</span> pipefail\n\n<span class=\"token keyword\">function</span> <span class=\"token function-name function\">message</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"---------------------------------------------------------------\"</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$1</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"---------------------------------------------------------------\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-x</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">command</span> <span class=\"token parameter variable\">-v</span> jq<span class=\"token variable\">)</span></span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    message <span class=\"token string\">\"JQ not installed. Installing...\"</span>\n    <span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> jq\n<span class=\"token keyword\">fi</span></code></pre>\n", "date_published": "2023-01-05T00:00:00Z" } , { "id": "https://example.com/posts/2024/markdown-syntax-2/", "url": "https://example.com/posts/2024/markdown-syntax-2/", "title": "Markdown Syntax Guide Part 2", "content_html": "<p>This article offers a sample of basic Markdown syntax that can be used in Eleventy content files, also it shows whether basic HTML elements are decorated with CSS in a Eleventy theme.</p>\n<!--more-->\n<h2>Headings</h2>\n<p>The following HTML <code>&lt;h1&gt;</code>â€”<code>&lt;h6&gt;</code> elements represent six levels of section headings. <code>&lt;h1&gt;</code> is the highest section level while <code>&lt;h6&gt;</code> is the lowest.</p>\n<h1>H1</h1>\n<h2>H2</h2>\n<h3>H3</h3>\n<h4>H4</h4>\n<h5>H5</h5>\n<h6>H6</h6>\n<h2>Paragraph</h2>\n<p>Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.</p>\n<p>Itatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.</p>\n<h2>Image</h2>\n<p><img src=\"https://picsum.photos/480/320\" alt=\"placeholder image\"></p>\n<h2>Blockquotes</h2>\n<p>The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a <code>footer</code> or <code>cite</code> element, and optionally with in-line changes such as annotations and abbreviations.</p>\n<h4>Blockquote without attribution</h4>\n<blockquote>\n<p>Tiam, ad mint andaepu dandae nostion secatur sequo quae.\n<strong>Note</strong> that you can use <em>Markdown syntax</em> within a blockquote.</p>\n</blockquote>\n<h4>Blockquote with attribution</h4>\n<blockquote>\n<p>Don't communicate by sharing memory, share memory by communicating.<br>\nâ€” <cite>Rob Pike[^1]</cite></p>\n</blockquote>\n<p>[^1]: The above quote is excerpted from Rob Pike's <a href=\"https://www.youtube.com/watch?v=PAAkCSZUG1c\">talk</a> during Gopherfest, November 18, 2015.</p>\n<h2>Code Blocks</h2>\n<h4>Code block with backticks</h4>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Example HTML5 Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<h4>Code block indented with four spaces</h4>\n<p>&lt;!doctype html&gt;\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Example HTML5 Document</title>\n</head>\n<body>\n<p>Test</p>\n</body>\n</html></p>\n<h2>List Types</h2>\n<h4>Ordered List</h4>\n<ol>\n<li>First item</li>\n<li>Second item</li>\n<li>Third item</li>\n</ol>\n<h4>Unordered List</h4>\n<ul>\n<li>List item</li>\n<li>Another item</li>\n<li>And another item</li>\n</ul>\n<h4>Nested list</h4>\n<ul>\n<li>Fruit\n<ul>\n<li>Apple</li>\n<li>Orange</li>\n<li>Banana</li>\n</ul>\n</li>\n<li>Dairy\n<ul>\n<li>Milk</li>\n<li>Cheese</li>\n</ul>\n</li>\n</ul>\n<h2>Other Elements â€” abbr, sub, sup, kbd, mark</h2>\n<p><abbr title=\"Graphics Interchange Format\">GIF</abbr> is a bitmap image format.</p>\n<p>H<sub>2</sub>O</p>\n<p>X<sup>n</sup> + Y<sup>n</sup> = Z<sup>n</sup></p>\n<p>Press <kbd><kbd>CTRL</kbd>+<kbd>ALT</kbd>+<kbd>Delete</kbd></kbd> to end the session.</p>\n<p>Most <mark>salamanders</mark> are nocturnal, and hunt for insects, worms, and other small creatures.</p>\n", "date_published": "2021-03-24T00:00:00Z" } , { "id": "https://example.com/posts/2024/markdown-syntax/", "url": "https://example.com/posts/2024/markdown-syntax/", "title": "Markdown Syntax Guide", "content_html": "<p>This article offers a sample of basic Markdown syntax that can be used in Eleventy content files, also it shows whether basic HTML elements are decorated with CSS in a Eleventy theme.</p>\n<!--more-->\n<h2>Headings</h2>\n<p>The following HTML <code>&lt;h1&gt;</code>â€”<code>&lt;h6&gt;</code> elements represent six levels of section headings. <code>&lt;h1&gt;</code> is the highest section level while <code>&lt;h6&gt;</code> is the lowest.</p>\n<h1>H1</h1>\n<h2>H2</h2>\n<h3>H3</h3>\n<h4>H4</h4>\n<h5>H5</h5>\n<h6>H6</h6>\n<h2>Paragraph</h2>\n<p>Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.</p>\n<p>Itatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.</p>\n<h2>Blockquotes</h2>\n<p>The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a <code>footer</code> or <code>cite</code> element, and optionally with in-line changes such as annotations and abbreviations.</p>\n<h4>Blockquote without attribution</h4>\n<blockquote>\n<p>Tiam, ad mint andaepu dandae nostion secatur sequo quae.\n<strong>Note</strong> that you can use <em>Markdown syntax</em> within a blockquote.</p>\n</blockquote>\n<h4>Blockquote with attribution</h4>\n<blockquote>\n<p>Don't communicate by sharing memory, share memory by communicating.<br>\nâ€” <cite>Rob Pike[^1]</cite></p>\n</blockquote>\n<p>[^1]: The above quote is excerpted from Rob Pike's <a href=\"https://www.youtube.com/watch?v=PAAkCSZUG1c\">talk</a> during Gopherfest, November 18, 2015.</p>\n<h2>Code Blocks</h2>\n<h4>Code block with backticks</h4>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Example HTML5 Document<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Test<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n<h4>Code block indented with four spaces</h4>\n<p>&lt;!doctype html&gt;\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Example HTML5 Document</title>\n</head>\n<body>\n<p>Test</p>\n</body>\n</html></p>\n<h2>List Types</h2>\n<h4>Ordered List</h4>\n<ol>\n<li>First item</li>\n<li>Second item</li>\n<li>Third item</li>\n</ol>\n<h4>Unordered List</h4>\n<ul>\n<li>List item</li>\n<li>Another item</li>\n<li>And another item</li>\n</ul>\n<h4>Nested list</h4>\n<ul>\n<li>Fruit\n<ul>\n<li>Apple</li>\n<li>Orange</li>\n<li>Banana</li>\n</ul>\n</li>\n<li>Dairy\n<ul>\n<li>Milk</li>\n<li>Cheese</li>\n</ul>\n</li>\n</ul>\n<h2>Other Elements â€” abbr, sub, sup, kbd, mark</h2>\n<p><abbr title=\"Graphics Interchange Format\">GIF</abbr> is a bitmap image format.</p>\n<p>H<sub>2</sub>O</p>\n<p>X<sup>n</sup> + Y<sup>n</sup> = Z<sup>n</sup></p>\n<p>Press <kbd><kbd>CTRL</kbd>+<kbd>ALT</kbd>+<kbd>Delete</kbd></kbd> to end the session.</p>\n<p>Most <mark>salamanders</mark> are nocturnal, and hunt for insects, worms, and other small creatures.</p>\n", "date_published": "2021-03-16T00:00:00Z" } , { "id": "https://example.com/posts/2024/lorem-ipsum/", "url": "https://example.com/posts/2024/lorem-ipsum/", "title": "Customary Lorem Ipsum post", "content_html": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Tempor orci eu lobortis elementum nibh tellus molestie nunc non. Amet facilisis magna etiam tempor orci eu lobortis elementum nibh. Pharetra sit amet aliquam id. Volutpat odio facilisis mauris sit amet massa vitae tortor condimentum. Semper viverra nam libero justo laoreet. Mattis rhoncus urna neque viverra justo nec ultrices dui. Mauris augue neque gravida in fermentum et sollicitudin. Nunc mattis enim ut tellus elementum sagittis vitae. Nibh sed pulvinar proin gravida hendrerit lectus. Diam quam nulla porttitor massa. Ac felis donec et odio pellentesque diam volutpat. Cursus eget nunc scelerisque viverra mauris in. Non curabitur gravida arcu ac tortor dignissim convallis. Adipiscing at in tellus integer feugiat.</p>\n<h2>Consectetur libero id</h2>\n<p>Faucibus nisl tincidunt eget nullam non nisi. Tristique nulla aliquet enim tortor at auctor urna. Nisi scelerisque eu ultrices vitae auctor eu augue ut. Cras ornare arcu dui vivamus arcu felis bibendum ut. Eget nulla facilisi etiam dignissim diam quis enim. Consectetur purus ut faucibus pulvinar elementum. Ultricies tristique nulla aliquet enim tortor at auctor urna nunc. Ullamcorper velit sed ullamcorper morbi tincidunt ornare. Id semper risus in hendrerit gravida rutrum. Dignissim convallis aenean et tortor at.</p>\n<p><img src=\"https://live.staticflickr.com/397/31445325431_981b759c23_h.jpg\" alt=\"lorem photum\"></p>\n<p>Laoreet non curabitur gravida arcu. Neque sodales ut etiam sit amet. Vitae purus faucibus ornare suspendisse sed nisi lacus sed viverra. Ornare arcu dui vivamus arcu. Et leo duis ut diam quam nulla porttitor massa id. Diam sit amet nisl suscipit adipiscing bibendum est. Porttitor massa id neque aliquam vestibulum morbi blandit. Tellus integer feugiat scelerisque varius morbi enim nunc faucibus. Dui ut ornare lectus sit amet est placerat in egestas. Vel elit scelerisque mauris pellentesque pulvinar.</p>\n<aside>Odio tempor orci dapibus ultrices in iaculis nunc sed augue. Aenean pharetra magna ac placerat vestibulum lectus mauris.</aside>\n<p>Sit amet justo donec enim diam vulputate ut pharetra sit. Mi proin sed libero enim sed faucibus. Tortor at auctor urna nunc id cursus metus. In pellentesque massa placerat duis ultricies. Semper feugiat nibh sed pulvinar.</p>\n<p>Amet purus gravida quis blandit turpis cursus in hac. Natoque penatibus et magnis dis parturient montes nascetur. Tortor dignissim convallis aenean et tortor at. Eget est lorem ipsum dolor. Lectus nulla at volutpat diam ut venenatis tellus. Ultrices neque ornare aenean euismod elementum nisi quis eleifend. At tellus at urna condimentum mattis pellentesque id. Egestas egestas fringilla phasellus faucibus scelerisque eleifend. Etiam tempor orci eu lobortis elementum nibh tellus. Integer enim neque volutpat ac.</p>\n<h3>Non blandit massa enim nec</h3>\n<p>Leo urna molestie at elementum eu facilisis. Vestibulum sed arcu non odio. Tortor aliquam nulla facilisi cras fermentum odio. Ante in nibh mauris cursus mattis molestie. Lacus sed viverra tellus in. Tortor pretium viverra suspendisse potenti nullam ac tortor vitae purus. Non consectetur a erat nam at lectus urna duis convallis. Tortor dignissim convallis aenean et tortor at risus viverra adipiscing. Tincidunt id aliquet risus feugiat in ante. Aliquam vestibulum morbi blandit cursus risus at ultrices mi tempus. Nec ultrices dui sapien eget. Ullamcorper a lacus vestibulum sed arcu. Et odio pellentesque diam volutpat commodo sed egestas. Orci phasellus egestas tellus rutrum tellus pellentesque eu tincidunt. Ipsum a arcu cursus vitae. Adipiscing elit duis tristique sollicitudin nibh sit. Quis ipsum suspendisse ultrices gravida dictum fusce ut placerat orci. Felis donec et odio pellentesque diam volutpat commodo. Eget nulla facilisi etiam dignissim diam quis.</p>\n<blockquote>\n<p>Mauris a diam maecenas sed enim ut sem viverra. Suspendisse faucibus interdum posuere lorem ipsum dolor sit amet. Cursus eget nunc scelerisque viverra. Id velit ut tortor pretium viverra suspendisse. Ultrices eros in cursus turpis. Quis hendrerit dolor magna eget est lorem ipsum dolor. Diam in arcu cursus euismod quis. Vitae suscipit tellus mauris a diam maecenas sed. Purus non enim praesent elementum facilisis leo vel. Porttitor massa id neque aliquam. Lectus urna duis convallis convallis tellus. Nunc consequat interdum varius sit amet mattis vulputate enim.</p>\n</blockquote>\n<p>Orci nulla pellentesque dignissim enim sit. Tincidunt vitae semper quis lectus nulla at volutpat. Molestie at elementum eu facilisis. In aliquam sem fringilla ut morbi tincidunt augue interdum. Dui nunc mattis enim ut tellus elementum. Ultricies lacus sed turpis tincidunt id aliquet risus feugiat in. Enim diam vulputate ut pharetra sit amet aliquam id. Volutpat est velit egestas dui id ornare. Eu mi bibendum neque egestas congue. Cras sed felis eget velit. Integer quis auctor elit sed vulputate mi sit amet mauris. Gravida rutrum quisque non tellus orci. Rutrum quisque non tellus orci ac <button>auctor</button>.</p>\n<h3>Tincidunt arcu non sodales</h3>\n<p>Neque sodales ut etiam sit. Nibh venenatis cras sed felis eget velit aliquet sagittis id. Aliquet enim tortor at auctor urna nunc id. Turpis massa tincidunt dui ut ornare lectus sit amet. Id faucibus nisl tincidunt eget nullam non. Vitae ultricies leo integer malesuada nunc. Volutpat est velit egestas dui id ornare arcu odio ut. Cursus turpis massa tincidunt dui ut ornare. Neque aliquam vestibulum morbi blandit cursus risus at. Aenean vel elit scelerisque mauris. Quisque sagittis purus sit amet volutpat consequat mauris nunc congue. Nibh tortor id aliquet lectus proin. Sagittis nisl rhoncus mattis rhoncus urna neque.</p>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">loremFunction</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">boolean</span> ipsum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token constant\">LOG</span><span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Lorem ipsum begins\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Intent</span> sendIntent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sendIntent<span class=\"token punctuation\">.</span><span class=\"token function\">putExtra</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lorem ipsum dolor\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sit amet\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Metus vulputate eu scelerisque felis imperdiet proin fermentum leo. Vulputate enim nulla aliquet porttitor lacus luctus accumsan tortor posuere. Vel pharetra vel turpis nunc eget lorem dolor. Ut tellus elementum sagittis vitae et. Donec ultrices tincidunt arcu non sodales neque sodales. Dis parturient montes nascetur ridiculus <kbd>mus</kbd> mauris vitae. Pulvinar etiam non quam lacus suspendisse. Senectus et netus et malesuada. Sed viverra tellus in hac habitasse. Est sit amet facilisis magna etiam tempor orci eu lobortis.</p>\n<section>Ac turpis egestas integer eget. Euismod elementum nisi quis eleifend. Risus quis varius quam quisque id diam. Adipiscing elit ut aliquam purus sit amet. Tristique senectus et netus et malesuada fames ac. Fames ac turpis egestas sed tempus urna et pharetra. Vel pharetra vel turpis nunc eget lorem dolor. Augue eget arcu dictum varius duis at. Nibh tortor id aliquet lectus proin nibh.</section>\n<h2>Bibendum ut tristique</h2>\n<p>Et egestas quis ipsum suspendisse ultrices gravida. <mark>Est placerat in egestas</mark> erat imperdiet. Imperdiet dui accumsan sit amet nulla facilisi. Quis ipsum suspendisse ultrices gravida dictum fusce ut placerat orci. Aliquet risus feugiat in ante metus dictum at tempor. Vel pharetra vel turpis nunc eget lorem. Suscipit tellus mauris a diam maecenas. Volutpat commodo sed egestas egestas fringilla phasellus faucibus. Justo eget magna fermentum iaculis. Sed euismod nisi porta lorem mollis aliquam ut porttitor leo. Gravida rutrum quisque non tellus orci. Cursus metus aliquam eleifend mi in. Vulputate mi sit amet mauris commodo.</p>\n<p>Arcu odio ut sem nulla pharetra diam sit amet. Ipsum faucibus vitae aliquet nec ullamcorper sit. At imperdiet dui accumsan sit amet nulla facilisi. In nibh mauris cursus mattis molestie a iaculis at erat. Suspendisse in est ante in nibh. Fringilla phasellus faucibus scelerisque eleifend donec pretium vulputate sapien nec. Elit duis tristique sollicitudin nibh. Sagittis nisl rhoncus mattis rhoncus urna neque. Sit amet volutpat consequat mauris nunc. Eget nullam non nisi est sit amet. Et leo duis ut diam quam. Tincidunt arcu non sodales neque sodales ut. Auctor elit sed vulputate mi sit amet. Viverra suspendisse potenti nullam ac tortor vitae purus faucibus. Cras adipiscing enim eu turpis. Placerat in egestas erat imperdiet. Egestas tellus rutrum tellus pellentesque eu tincidunt tortor.</p>\n<div class=\"video\">\n<iframe src=\"https://www.youtube.com/embed/fop5YIk5iek?controls=0\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\"></iframe>\n</div>\n", "date_published": "2018-05-01T00:00:00Z" }  ] }
